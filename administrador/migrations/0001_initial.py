# Generated by Django 4.1.1 on 2022-09-29 22:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('idadministrador', models.AutoField(db_column='idAdministrador', primary_key=True, serialize=False)),
                ('idaplicativo', models.IntegerField(blank=True, db_column='idAplicativo', null=True)),
                ('usuario', models.CharField(max_length=15, unique=True)),
                ('contrasenia', models.CharField(max_length=32)),
                ('nombres', models.CharField(max_length=125)),
                ('apellidos', models.CharField(max_length=125)),
                ('idpais', models.IntegerField(blank=True, db_column='idPais', null=True)),
                ('celular', models.CharField(max_length=18, unique=True)),
                ('cedula', models.CharField(max_length=18, unique=True)),
                ('correo', models.CharField(max_length=125, unique=True)),
                ('hangouts', models.CharField(max_length=125)),
                ('fecha_nacimiento', models.DateField()),
                ('direccion', models.CharField(max_length=300)),
                ('imagen', models.ImageField(upload_to='')),
                ('idadministradorregistro', models.IntegerField(blank=True, db_column='idAdministradorRegistro', null=True)),
                ('idadministradoredito', models.IntegerField(blank=True, db_column='idAdministradorEdito', null=True)),
                ('bloqueadomensaje', models.CharField(blank=True, db_column='bloqueadoMensaje', max_length=400, null=True)),
                ('bloqueado', models.TextField()),
                ('fecha_actualizacion', models.DateTimeField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField()),
                ('fecha_bloqueo', models.DateTimeField(blank=True, null=True)),
                ('fecha_reactivacion', models.DateTimeField(blank=True, null=True)),
                ('mensajereactivacion', models.CharField(blank=True, db_column='mensajeReactivacion', max_length=400, null=True)),
                ('tiposangre', models.CharField(blank=True, db_column='tipoSangre', max_length=6, null=True)),
                ('cambiarclave', models.IntegerField(blank=True, db_column='cambiarClave', null=True)),
                ('clavetemporal', models.CharField(blank=True, db_column='claveTemporal', max_length=5, null=True)),
                ('fecha_cambio_clave', models.DateTimeField(blank=True, null=True)),
                ('fecha_recupero_clave', models.DateTimeField(blank=True, null=True)),
                ('idtipoidentificacion', models.IntegerField(blank=True, db_column='idTipoIdentificacion', null=True)),
            ],
            options={
                'db_table': 'administrador',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogsSystemFintech',
            fields=[
                ('id_log', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_tabla', models.CharField(max_length=45)),
                ('data', models.TextField(db_collation='utf8mb4_bin')),
                ('tipo', models.CharField(max_length=45)),
                ('idadministrador', models.CharField(db_column='idAdministrador', max_length=45)),
                ('fecha_registro', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'logs_system_fintech',
                'managed': False,
            },
        ),
    ]
